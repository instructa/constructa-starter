# =============================================================================
# Constructa Starter - Environment Configuration
# =============================================================================
# Copy this file to .env and update the values as needed
# Never commit .env to version control!

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Client-side Base URL (optional - defaults to current origin in production)
# Used by TanStack Router for base path resolution
VITE_BASE_URL="http://localhost:3000"

# =============================================================================
# AI & ASSISTANT CONFIGURATION
# =============================================================================
# Server-only API key for LLM provider used by Mastra agents
OPENAI_API_KEY="sk-..."

# =============================================================================
# BILLING / POLAR CONFIGURATION
# =============================================================================
# Polar environment: "sandbox" for testing or "production" for live payments
POLAR_SERVER="sandbox"

# Polar access token with API access to your organization
POLAR_ACCESS_TOKEN=""

# Polar webhook secret used to verify incoming webhooks
POLAR_WEBHOOK_SECRET=""

# Polar organization identifier (visible in the Polar dashboard)
POLAR_ORGANIZATION_ID=""

# Subscription products (Polar product IDs created in your dashboard)
POLAR_PRODUCT_PRO_MONTHLY="prod_..."
POLAR_PRODUCT_BUSINESS_MONTHLY="prod_..."

# Optional one-time credit pack products
POLAR_PRODUCT_CREDITS_50="prod_..."
POLAR_PRODUCT_CREDITS_100="prod_..."

# Public URLs used for checkout redirects
PUBLIC_URL="http://localhost:3000"
CHECKOUT_SUCCESS_URL="http://localhost:3000/dashboard/billing/success"
CHECKOUT_CANCEL_URL="http://localhost:3000/dashboard/billing"

# Optional external booking link for enterprise demos (exposed to the client)
VITE_ENTERPRISE_DEMO_URL="https://calendly.com/your-team/demo"

# Expose product IDs to the client for checkout buttons
VITE_POLAR_PRODUCT_CREDITS_50="prod_..."
VITE_POLAR_PRODUCT_CREDITS_100="prod_..."
VITE_POLAR_PRODUCT_PRO_MONTHLY="prod_..."
VITE_POLAR_PRODUCT_BUSINESS_MONTHLY="prod_..."

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string for Drizzle ORM and database operations
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://user:password@localhost:5432/ex0"

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================
# Better Auth - Secret key for JWT token signing
# Generate a secure random string for production
# You can generate one using: openssl rand -base64 32
BETTER_AUTH_SECRET="your-secret-key-here"

# Better Auth - Base URL for auth callbacks
BETTER_AUTH_URL="http://localhost:3000"

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

## GENERAL SETTINGS
# Enable/disable email verification for new user registration
VITE_ENABLE_EMAIL_VERIFICATION="true"
ENABLE_EMAIL_VERIFICATION="true"

# Default "from" address for outgoing emails
EMAIL_FROM="noreply@example.org"

## EMAIL PROVIDER
# Choose your email provider: console, mailhog, smtp, resend
EMAIL_PROVIDER="mailhog"

# RESEND API (if using Resend provider)
# Get your API key from https://resend.com/api-keys
RESEND_API_KEY="your-api-key"

# SMTP CONFIGURATION (if using SMTP provider)
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT="587"
# SMTP_SECURE="false"
# SMTP_USER="your-email@gmail.com"
# SMTP_PASS="your-app-password"

# =============================================================================
# FILE STORAGE CONFIGURATION (MINIO / S3)
# =============================================================================
# S3-compatible object storage for file uploads and assets
# These settings work with both MinIO (local) and AWS S3 (production)

# S3 Endpoint - Use localhost for MinIO, AWS endpoint for S3
# MinIO: http://localhost:9000
# AWS S3: https://s3.amazonaws.com
S3_ENDPOINT="http://localhost:9000"

# S3 Credentials - Use MinIO credentials for local development
S3_ACCESS_KEY_ID="minioadmin"
S3_SECRET_ACCESS_KEY="minioadmin"

# S3 Region - Use us-east-1 for MinIO compatibility
S3_REGION="us-east-1"

# Default S3 Bucket - Create this bucket in MinIO first
S3_BUCKET="constructa-files"

# S3 Force Path Style - Required for MinIO
S3_FORCE_PATH_STYLE="true"

# =============================================================================
# OAUTH PROVIDERS (OPTIONAL)
# =============================================================================
# Configure OAuth providers for social login
# Leave empty if not using these providers

## GITHUB OAUTH
VITE_GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

## GOOGLE OAUTH
VITE_GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# Test environment settings (used by testing framework)
TEST_BASE_URL="http://localhost:3000"
