/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as marketingRouteRouteImport } from './routes/(marketing)/route'
import { Route as marketingIndexRouteImport } from './routes/(marketing)/index'
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email'
import { Route as AuthResendVerificationRouteImport } from './routes/auth/resend-verification'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'

// Create/Update Routes

const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const marketingRouteRoute = marketingRouteRouteImport.update({
  id: '/(marketing)',
  getParentRoute: () => rootRoute,
} as any)

const marketingIndexRoute = marketingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => marketingRouteRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const AuthResendVerificationRoute = AuthResendVerificationRouteImport.update({
  id: '/auth/resend-verification',
  path: '/auth/resend-verification',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(marketing)': {
      id: '/(marketing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof marketingRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/resend-verification': {
      id: '/auth/resend-verification'
      path: '/auth/resend-verification'
      fullPath: '/auth/resend-verification'
      preLoaderRoute: typeof AuthResendVerificationRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailRouteImport
      parentRoute: typeof rootRoute
    }
    '/(marketing)/': {
      id: '/(marketing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof marketingIndexRouteImport
      parentRoute: typeof marketingRouteRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/(marketing)/route' {
  const createFileRoute: CreateFileRoute<
    '/(marketing)',
    FileRoutesByPath['/(marketing)']['parentRoute'],
    FileRoutesByPath['/(marketing)']['id'],
    FileRoutesByPath['/(marketing)']['path'],
    FileRoutesByPath['/(marketing)']['fullPath']
  >
}
declare module './routes/dashboard' {
  const createFileRoute: CreateFileRoute<
    '/dashboard',
    FileRoutesByPath['/dashboard']['parentRoute'],
    FileRoutesByPath['/dashboard']['id'],
    FileRoutesByPath['/dashboard']['path'],
    FileRoutesByPath['/dashboard']['fullPath']
  >
}
declare module './routes/docs' {
  const createFileRoute: CreateFileRoute<
    '/docs',
    FileRoutesByPath['/docs']['parentRoute'],
    FileRoutesByPath['/docs']['id'],
    FileRoutesByPath['/docs']['path'],
    FileRoutesByPath['/docs']['fullPath']
  >
}
declare module './routes/(auth)/sign-in' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/sign-in',
    FileRoutesByPath['/(auth)/sign-in']['parentRoute'],
    FileRoutesByPath['/(auth)/sign-in']['id'],
    FileRoutesByPath['/(auth)/sign-in']['path'],
    FileRoutesByPath['/(auth)/sign-in']['fullPath']
  >
}
declare module './routes/(auth)/sign-up' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/sign-up',
    FileRoutesByPath['/(auth)/sign-up']['parentRoute'],
    FileRoutesByPath['/(auth)/sign-up']['id'],
    FileRoutesByPath['/(auth)/sign-up']['path'],
    FileRoutesByPath['/(auth)/sign-up']['fullPath']
  >
}
declare module './routes/auth/resend-verification' {
  const createFileRoute: CreateFileRoute<
    '/auth/resend-verification',
    FileRoutesByPath['/auth/resend-verification']['parentRoute'],
    FileRoutesByPath['/auth/resend-verification']['id'],
    FileRoutesByPath['/auth/resend-verification']['path'],
    FileRoutesByPath['/auth/resend-verification']['fullPath']
  >
}
declare module './routes/auth/verify-email' {
  const createFileRoute: CreateFileRoute<
    '/auth/verify-email',
    FileRoutesByPath['/auth/verify-email']['parentRoute'],
    FileRoutesByPath['/auth/verify-email']['id'],
    FileRoutesByPath['/auth/verify-email']['path'],
    FileRoutesByPath['/auth/verify-email']['fullPath']
  >
}
declare module './routes/(marketing)/index' {
  const createFileRoute: CreateFileRoute<
    '/(marketing)/',
    FileRoutesByPath['/(marketing)/']['parentRoute'],
    FileRoutesByPath['/(marketing)/']['id'],
    FileRoutesByPath['/(marketing)/']['path'],
    FileRoutesByPath['/(marketing)/']['fullPath']
  >
}

// Create and export the route tree

interface marketingRouteRouteChildren {
  marketingIndexRoute: typeof marketingIndexRoute
}

const marketingRouteRouteChildren: marketingRouteRouteChildren = {
  marketingIndexRoute: marketingIndexRoute,
}

const marketingRouteRouteWithChildren = marketingRouteRoute._addFileChildren(
  marketingRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof marketingIndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/auth/resend-verification': typeof AuthResendVerificationRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/auth/resend-verification': typeof AuthResendVerificationRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/': typeof marketingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(marketing)': typeof marketingRouteRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/auth/resend-verification': typeof AuthResendVerificationRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/(marketing)/': typeof marketingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/docs'
    | '/sign-in'
    | '/sign-up'
    | '/auth/resend-verification'
    | '/auth/verify-email'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/docs'
    | '/sign-in'
    | '/sign-up'
    | '/auth/resend-verification'
    | '/auth/verify-email'
    | '/'
  id:
    | '__root__'
    | '/(marketing)'
    | '/dashboard'
    | '/docs'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/auth/resend-verification'
    | '/auth/verify-email'
    | '/(marketing)/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  marketingRouteRoute: typeof marketingRouteRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  DocsRoute: typeof DocsRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  AuthResendVerificationRoute: typeof AuthResendVerificationRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  marketingRouteRoute: marketingRouteRouteWithChildren,
  DashboardRoute: DashboardRoute,
  DocsRoute: DocsRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  AuthResendVerificationRoute: AuthResendVerificationRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(marketing)",
        "/dashboard",
        "/docs",
        "/(auth)/sign-in",
        "/(auth)/sign-up",
        "/auth/resend-verification",
        "/auth/verify-email"
      ]
    },
    "/(marketing)": {
      "filePath": "(marketing)/route.tsx",
      "children": [
        "/(marketing)/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/docs": {
      "filePath": "docs.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/auth/resend-verification": {
      "filePath": "auth/resend-verification.tsx"
    },
    "/auth/verify-email": {
      "filePath": "auth/verify-email.tsx"
    },
    "/(marketing)/": {
      "filePath": "(marketing)/index.tsx",
      "parent": "/(marketing)"
    }
  }
}
ROUTE_MANIFEST_END */
