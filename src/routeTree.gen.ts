/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as marketingRouteRouteImport } from './routes/(marketing)/route'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as marketingIndexRouteImport } from './routes/(marketing)/index'
import { Route as AuthPathnameRouteImport } from './routes/auth/$pathname'
import { Route as DashboardWorkflowRouteRouteImport } from './routes/dashboard/workflow/route'
import { Route as DashboardImageChatRouteRouteImport } from './routes/dashboard/image-chat/route'
import { Route as DashboardDocumentsRouteRouteImport } from './routes/dashboard/documents/route'
import { Route as DashboardChatRouteRouteImport } from './routes/dashboard/chat/route'
import { Route as DashboardChartsRouteRouteImport } from './routes/dashboard/charts/route'

// Create/Update Routes

const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const marketingRouteRoute = marketingRouteRouteImport.update({
  id: '/(marketing)',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const marketingIndexRoute = marketingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => marketingRouteRoute,
} as any)

const AuthPathnameRoute = AuthPathnameRouteImport.update({
  id: '/auth/$pathname',
  path: '/auth/$pathname',
  getParentRoute: () => rootRoute,
} as any)

const DashboardWorkflowRouteRoute = DashboardWorkflowRouteRouteImport.update({
  id: '/workflow',
  path: '/workflow',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardImageChatRouteRoute = DashboardImageChatRouteRouteImport.update({
  id: '/image-chat',
  path: '/image-chat',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDocumentsRouteRoute = DashboardDocumentsRouteRouteImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardChatRouteRoute = DashboardChatRouteRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardChartsRouteRoute = DashboardChartsRouteRouteImport.update({
  id: '/charts',
  path: '/charts',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(marketing)': {
      id: '/(marketing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof marketingRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/charts': {
      id: '/dashboard/charts'
      path: '/charts'
      fullPath: '/dashboard/charts'
      preLoaderRoute: typeof DashboardChartsRouteRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
    '/dashboard/chat': {
      id: '/dashboard/chat'
      path: '/chat'
      fullPath: '/dashboard/chat'
      preLoaderRoute: typeof DashboardChatRouteRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
    '/dashboard/documents': {
      id: '/dashboard/documents'
      path: '/documents'
      fullPath: '/dashboard/documents'
      preLoaderRoute: typeof DashboardDocumentsRouteRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
    '/dashboard/image-chat': {
      id: '/dashboard/image-chat'
      path: '/image-chat'
      fullPath: '/dashboard/image-chat'
      preLoaderRoute: typeof DashboardImageChatRouteRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
    '/dashboard/workflow': {
      id: '/dashboard/workflow'
      path: '/workflow'
      fullPath: '/dashboard/workflow'
      preLoaderRoute: typeof DashboardWorkflowRouteRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
    '/auth/$pathname': {
      id: '/auth/$pathname'
      path: '/auth/$pathname'
      fullPath: '/auth/$pathname'
      preLoaderRoute: typeof AuthPathnameRouteImport
      parentRoute: typeof rootRoute
    }
    '/(marketing)/': {
      id: '/(marketing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof marketingIndexRouteImport
      parentRoute: typeof marketingRouteRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/(marketing)/route' {
  const createFileRoute: CreateFileRoute<
    '/(marketing)',
    FileRoutesByPath['/(marketing)']['parentRoute'],
    FileRoutesByPath['/(marketing)']['id'],
    FileRoutesByPath['/(marketing)']['path'],
    FileRoutesByPath['/(marketing)']['fullPath']
  >
}
declare module './routes/dashboard/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard',
    FileRoutesByPath['/dashboard']['parentRoute'],
    FileRoutesByPath['/dashboard']['id'],
    FileRoutesByPath['/dashboard']['path'],
    FileRoutesByPath['/dashboard']['fullPath']
  >
}
declare module './routes/docs' {
  const createFileRoute: CreateFileRoute<
    '/docs',
    FileRoutesByPath['/docs']['parentRoute'],
    FileRoutesByPath['/docs']['id'],
    FileRoutesByPath['/docs']['path'],
    FileRoutesByPath['/docs']['fullPath']
  >
}
declare module './routes/dashboard/charts/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/charts',
    FileRoutesByPath['/dashboard/charts']['parentRoute'],
    FileRoutesByPath['/dashboard/charts']['id'],
    FileRoutesByPath['/dashboard/charts']['path'],
    FileRoutesByPath['/dashboard/charts']['fullPath']
  >
}
declare module './routes/dashboard/chat/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/chat',
    FileRoutesByPath['/dashboard/chat']['parentRoute'],
    FileRoutesByPath['/dashboard/chat']['id'],
    FileRoutesByPath['/dashboard/chat']['path'],
    FileRoutesByPath['/dashboard/chat']['fullPath']
  >
}
declare module './routes/dashboard/documents/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/documents',
    FileRoutesByPath['/dashboard/documents']['parentRoute'],
    FileRoutesByPath['/dashboard/documents']['id'],
    FileRoutesByPath['/dashboard/documents']['path'],
    FileRoutesByPath['/dashboard/documents']['fullPath']
  >
}
declare module './routes/dashboard/image-chat/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/image-chat',
    FileRoutesByPath['/dashboard/image-chat']['parentRoute'],
    FileRoutesByPath['/dashboard/image-chat']['id'],
    FileRoutesByPath['/dashboard/image-chat']['path'],
    FileRoutesByPath['/dashboard/image-chat']['fullPath']
  >
}
declare module './routes/dashboard/workflow/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/workflow',
    FileRoutesByPath['/dashboard/workflow']['parentRoute'],
    FileRoutesByPath['/dashboard/workflow']['id'],
    FileRoutesByPath['/dashboard/workflow']['path'],
    FileRoutesByPath['/dashboard/workflow']['fullPath']
  >
}
declare module './routes/auth/$pathname' {
  const createFileRoute: CreateFileRoute<
    '/auth/$pathname',
    FileRoutesByPath['/auth/$pathname']['parentRoute'],
    FileRoutesByPath['/auth/$pathname']['id'],
    FileRoutesByPath['/auth/$pathname']['path'],
    FileRoutesByPath['/auth/$pathname']['fullPath']
  >
}
declare module './routes/(marketing)/index' {
  const createFileRoute: CreateFileRoute<
    '/(marketing)/',
    FileRoutesByPath['/(marketing)/']['parentRoute'],
    FileRoutesByPath['/(marketing)/']['id'],
    FileRoutesByPath['/(marketing)/']['path'],
    FileRoutesByPath['/(marketing)/']['fullPath']
  >
}
declare module './routes/dashboard/index' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/',
    FileRoutesByPath['/dashboard/']['parentRoute'],
    FileRoutesByPath['/dashboard/']['id'],
    FileRoutesByPath['/dashboard/']['path'],
    FileRoutesByPath['/dashboard/']['fullPath']
  >
}

// Create and export the route tree

interface marketingRouteRouteChildren {
  marketingIndexRoute: typeof marketingIndexRoute
}

const marketingRouteRouteChildren: marketingRouteRouteChildren = {
  marketingIndexRoute: marketingIndexRoute,
}

const marketingRouteRouteWithChildren = marketingRouteRoute._addFileChildren(
  marketingRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardChartsRouteRoute: typeof DashboardChartsRouteRoute
  DashboardChatRouteRoute: typeof DashboardChatRouteRoute
  DashboardDocumentsRouteRoute: typeof DashboardDocumentsRouteRoute
  DashboardImageChatRouteRoute: typeof DashboardImageChatRouteRoute
  DashboardWorkflowRouteRoute: typeof DashboardWorkflowRouteRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardChartsRouteRoute: DashboardChartsRouteRoute,
  DashboardChatRouteRoute: DashboardChatRouteRoute,
  DashboardDocumentsRouteRoute: DashboardDocumentsRouteRoute,
  DashboardImageChatRouteRoute: DashboardImageChatRouteRoute,
  DashboardWorkflowRouteRoute: DashboardWorkflowRouteRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof marketingIndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/docs': typeof DocsRoute
  '/dashboard/charts': typeof DashboardChartsRouteRoute
  '/dashboard/chat': typeof DashboardChatRouteRoute
  '/dashboard/documents': typeof DashboardDocumentsRouteRoute
  '/dashboard/image-chat': typeof DashboardImageChatRouteRoute
  '/dashboard/workflow': typeof DashboardWorkflowRouteRoute
  '/auth/$pathname': typeof AuthPathnameRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/docs': typeof DocsRoute
  '/dashboard/charts': typeof DashboardChartsRouteRoute
  '/dashboard/chat': typeof DashboardChatRouteRoute
  '/dashboard/documents': typeof DashboardDocumentsRouteRoute
  '/dashboard/image-chat': typeof DashboardImageChatRouteRoute
  '/dashboard/workflow': typeof DashboardWorkflowRouteRoute
  '/auth/$pathname': typeof AuthPathnameRoute
  '/': typeof marketingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(marketing)': typeof marketingRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/docs': typeof DocsRoute
  '/dashboard/charts': typeof DashboardChartsRouteRoute
  '/dashboard/chat': typeof DashboardChatRouteRoute
  '/dashboard/documents': typeof DashboardDocumentsRouteRoute
  '/dashboard/image-chat': typeof DashboardImageChatRouteRoute
  '/dashboard/workflow': typeof DashboardWorkflowRouteRoute
  '/auth/$pathname': typeof AuthPathnameRoute
  '/(marketing)/': typeof marketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/docs'
    | '/dashboard/charts'
    | '/dashboard/chat'
    | '/dashboard/documents'
    | '/dashboard/image-chat'
    | '/dashboard/workflow'
    | '/auth/$pathname'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/docs'
    | '/dashboard/charts'
    | '/dashboard/chat'
    | '/dashboard/documents'
    | '/dashboard/image-chat'
    | '/dashboard/workflow'
    | '/auth/$pathname'
    | '/'
    | '/dashboard'
  id:
    | '__root__'
    | '/(marketing)'
    | '/dashboard'
    | '/docs'
    | '/dashboard/charts'
    | '/dashboard/chat'
    | '/dashboard/documents'
    | '/dashboard/image-chat'
    | '/dashboard/workflow'
    | '/auth/$pathname'
    | '/(marketing)/'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  marketingRouteRoute: typeof marketingRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  DocsRoute: typeof DocsRoute
  AuthPathnameRoute: typeof AuthPathnameRoute
}

const rootRouteChildren: RootRouteChildren = {
  marketingRouteRoute: marketingRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  DocsRoute: DocsRoute,
  AuthPathnameRoute: AuthPathnameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(marketing)",
        "/dashboard",
        "/docs",
        "/auth/$pathname"
      ]
    },
    "/(marketing)": {
      "filePath": "(marketing)/route.tsx",
      "children": [
        "/(marketing)/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/charts",
        "/dashboard/chat",
        "/dashboard/documents",
        "/dashboard/image-chat",
        "/dashboard/workflow",
        "/dashboard/"
      ]
    },
    "/docs": {
      "filePath": "docs.tsx"
    },
    "/dashboard/charts": {
      "filePath": "dashboard/charts/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/chat": {
      "filePath": "dashboard/chat/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/documents": {
      "filePath": "dashboard/documents/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/image-chat": {
      "filePath": "dashboard/image-chat/route.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/workflow": {
      "filePath": "dashboard/workflow/route.tsx",
      "parent": "/dashboard"
    },
    "/auth/$pathname": {
      "filePath": "auth/$pathname.tsx"
    },
    "/(marketing)/": {
      "filePath": "(marketing)/index.tsx",
      "parent": "/(marketing)"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
