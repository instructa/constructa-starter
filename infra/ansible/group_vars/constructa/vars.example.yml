# Copy this file to infra/ansible/group_vars/constructa/vars.yml and **encrypt it with Ansible Vault**:
#   ansible-vault encrypt infra/ansible/group_vars/constructa/vars.yml
#
# Manage it via the CLI:
#   pnpm run ex0 -- vault edit
#
# The playbook will render /opt/constructa/.env from this map.

constructa_deploy_dir: /opt/constructa

# Optional Docker daemon DNS overrides (helps containers reach the Internet)
# Leave empty to skip writing /etc/docker/daemon.json
constructa_docker_dns_servers:
  - '1.1.1.1'
  - '8.8.8.8'

# Sudo password for the deploy user (store encrypted via Vault)
constructa_deploy_sudo_passwort: 'change-me-deploy-password'

# Make Ansible escalate with the password above
ansible_become: true
ansible_become_method: sudo
ansible_become_password: '{{ constructa_deploy_sudo_passwort }}'
ansible_become_flags: '-SE'

# Optional: login to image registry before pulling
constructa_enable_registry_login: false
constructa_registry_server: ghcr.io
constructa_registry_username: 'your-ghcr-username'
constructa_registry_password: 'ghp_...'

# Optional Docker GC
constructa_enable_docker_gc: false
constructa_docker_gc_schedule: weekly
constructa_docker_gc_prune_age: 720h

# Optional swap on small VPS
constructa_swap_file: /swapfile
constructa_swap_size: 2G

# Application environment (rendered into .env). Example values shown; replace with real ones.
# TIP: Keep this file Vault-encrypted.
constructa_env:
  # Image + tag used by compose
  APP_IMAGE: 'ghcr.io/your-org/your-repo/app'
  APP_TAG: 'latest'

  # Domain + certificates (Caddy)
  APP_HOSTNAME: 'app.example.com'
  ACME_EMAIL: 'admin@example.com'

  # Postgres (internal)
  POSTGRES_USER: 'user'
  POSTGRES_PASSWORD: 'password'
  POSTGRES_DB: 'ex0'
  POSTGRES_HOST: 'db'
  POSTGRES_PORT: '5432'

  # MinIO/S3
  MINIO_ROOT_USER: 'minioadmin'
  MINIO_ROOT_PASSWORD: 'minioadmin'
  MINIO_BUCKET: 'constructa-files'
  S3_REGION: 'us-east-1'
  S3_ACCESS_KEY_ID: '${MINIO_ROOT_USER}'
  S3_SECRET_ACCESS_KEY: '${MINIO_ROOT_PASSWORD}'
  S3_BUCKET: '${MINIO_BUCKET}'
  S3_ENABLE_PATH_STYLE: '1'
  S3_PREVIEW_URL_EXPIRE_IN: '900'

  # Redis / BullMQ
  REDIS_PASSWORD: 'change-me-redis-password'
  BULLMQ_PREFIX: 'constructa'
  DAILY_CREDIT_REFILL_CRON: '0 3 * * *'
  JOB_DAILY_CREDIT_REFILL_URL: 'http://app:3000/api/jobs/daily-credit-refill'
  JOBS_SECRET: ''

  # Search (Meilisearch)
  MEILI_MASTER_KEY: 'changeme-master-key'
  MEILI_HOST: 'http://meilisearch:7700'
  MEILI_API_KEY: '${MEILI_MASTER_KEY}'
  SEARCH_REINDEX_ON_BOOT: 'false'

  # Auth / Email / Third-parties
  BETTER_AUTH_SECRET: 'your-secret-key-here'
  BETTER_AUTH_URL: 'https://${APP_HOSTNAME}'

  EMAIL_PROVIDER: 'smtp' # "smtp" | "resend" | "console"
  EMAIL_FROM: 'noreply@example.org'
  RESEND_API_KEY: ''

  OPENAI_API_KEY: ''
  POLAR_SERVER: 'production' # or "sandbox"
  POLAR_ACCESS_TOKEN: ''
  POLAR_WEBHOOK_SECRET: ''
  POLAR_ORGANIZATION_ID: ''
  POLAR_PRODUCT_PRO_MONTHLY: ''
  POLAR_PRODUCT_BUSINESS_MONTHLY: ''
  POLAR_PRODUCT_CREDITS_50: ''
  POLAR_PRODUCT_CREDITS_100: ''

  SENTRY_DSN: ''
  VITE_SENTRY_DSN: ''
  SENTRY_LOGGING: 'true'
  VITE_SENTRY_LOGGING: 'true'
  SENTRY_LOG_LEVEL: 'debug'
  VITE_SENTRY_LOG_LEVEL: 'debug'

  CONSOLE_LOGGER_PATCH: 'false'
  VITE_CONSOLE_LOGGER_PATCH: 'false'

  VITE_SENTRY_TRACES_SAMPLE_RATE: '1.0'
  VITE_SENTRY_REPLAYS_SESSION_SAMPLE_RATE: '0.1'
  VITE_SENTRY_REPLAYS_ON_ERROR_SAMPLE_RATE: '1.0'
  SENTRY_TRACES_SAMPLE_RATE: '1.0'
