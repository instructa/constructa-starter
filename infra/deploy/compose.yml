networks:
  edge:
    driver: bridge
  private:
    driver: bridge
services:
  app:
    build:
      context: ./app-source
      dockerfile: Dockerfile
      target: runner
    cap_drop:
    - ALL
    command:
    - node
    - .output/server/index.mjs
    container_name: ex0-app
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      provision-minio:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file:
    - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:?}
      MEILI_API_KEY: ${MEILI_API_KEY:-${MEILI_MASTER_KEY}}
      MEILI_HOST: ${MEILI_HOST:-http://meilisearch:7700}
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://:${REDIS_PASSWORD:?}@redis:6379
      S3_ACCESS_KEY_ID: ${MINIO_ROOT_USER:?}
      S3_BUCKET: ${MINIO_BUCKET:?}
      S3_ENABLE_PATH_STYLE: ${S3_ENABLE_PATH_STYLE:-1}
      S3_ENDPOINT: http://minio:9000
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:?}
    expose:
    - '3000'
    healthcheck:
      interval: 10s
      retries: 30
      test:
      - CMD
      - wget
      - -qO-
      - http://localhost:3000/health
      timeout: 3s
    image: ${APP_IMAGE:-ghcr.io/your-org/your-repo/app}:${APP_TAG:-latest}
    networks:
    - private
    read_only: true
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    tmpfs:
    - /tmp
  caddy:
    container_name: ex0-caddy
    depends_on:
    - app
    env_file:
    - .env
    environment:
      ACME_EMAIL: ${ACME_EMAIL:?}
      APP_HOSTNAME: ${APP_HOSTNAME:?}
    image: caddy:2.10.2-alpine
    networks:
    - edge
    - private
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    - ./Caddyfile:/etc/caddy/Caddyfile:ro
    - caddy_data:/data
    - caddy_config:/config
  db:
    container_name: ex0-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
    expose:
    - '5432'
    healthcheck:
      interval: 5s
      retries: 20
      test:
      - CMD-SHELL
      - pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      timeout: 3s
    image: pgvector/pgvector:0.8.0-pg17
    networks:
    - private
    restart: unless-stopped
    volumes:
    - ex0-data:/var/lib/postgresql/data
  meilisearch:
    container_name: ex0-meili
    environment:
      MEILI_ENV: production
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:?changeme}
    expose:
    - '7700'
    healthcheck:
      interval: 5s
      retries: 40
      test:
      - CMD
      - curl
      - -sSf
      - http://localhost:7700/health
      timeout: 3s
    image: getmeili/meilisearch:v1.22.0
    networks:
    - private
    restart: unless-stopped
    volumes:
    - ex0-meili-data:/meili_data
  migrate:
    build:
      context: ./app-source
      dockerfile: Dockerfile
      target: runner
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
    - pnpm
    - exec
    - drizzle-kit
    - migrate
    - --config
    - drizzle.config.ts
    env_file:
    - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:?}
      NODE_ENV: production
    image: ${APP_IMAGE:-ghcr.io/your-org/your-repo/app}:${APP_TAG:-latest}
    networks:
    - private
    restart: "no"
    working_dir: /app
  minio:
    command: server /data --console-address ":9001"
    container_name: ex0-minio
    environment:
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:?}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:?}
    healthcheck:
      interval: 5s
      retries: 20
      test:
      - CMD
      - curl
      - -f
      - http://localhost:9000/minio/health/live
      timeout: 3s
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    networks:
    - private
    ports:
    - 127.0.0.1:9000:9000
    - 127.0.0.1:9001:9001
    restart: unless-stopped
    volumes:
    - ex0-minio-data:/data
  provision-minio:
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: '/bin/sh -c " mc alias set local http://minio:9000 ${MINIO_ROOT_USER}
      ${MINIO_ROOT_PASSWORD} && mc mb --ignore-existing local/${MINIO_BUCKET} && mc
      anonymous set none local/${MINIO_BUCKET} || true "

      '
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    networks:
    - private
    restart: "no"
  redis:
    command:
    - redis-server
    - --save
    - '60'
    - '1'
    - --loglevel
    - warning
    - --requirepass
    - ${REDIS_PASSWORD:?}
    container_name: ex0-redis
    expose:
    - '6379'
    healthcheck:
      interval: 5s
      retries: 20
      test:
      - CMD
      - redis-cli
      - -a
      - ${REDIS_PASSWORD:?}
      - ping
      timeout: 3s
    image: redis:8.2.1-alpine
    networks:
    - private
    restart: unless-stopped
    volumes:
    - ex0-redis-data:/data
  worker:
    build:
      context: ./app-source
      dockerfile: Dockerfile
      target: runner
    cap_drop:
    - ALL
    command:
    - /bin/sh
    - -lc
    - cd /app && node --import tsx/loader src/worker/index.ts
    container_name: ex0-worker
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      provision-minio:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file:
    - .env
    environment:
      BULLMQ_PREFIX: ${BULLMQ_PREFIX:-constructa}
      DAILY_CREDIT_REFILL_CRON: ${DAILY_CREDIT_REFILL_CRON:-0 3 * * *}
      DATABASE_URL: ${DATABASE_URL:?}
      JOBS_SECRET: ${JOBS_SECRET:-}
      JOB_DAILY_CREDIT_REFILL_URL: ${JOB_DAILY_CREDIT_REFILL_URL:-http://app:3000/api/jobs/daily-credit-refill}
      MEILI_API_KEY: ${MEILI_API_KEY:-${MEILI_MASTER_KEY}}
      MEILI_HOST: ${MEILI_HOST:-http://meilisearch:7700}
      NODE_ENV: production
      REDIS_URL: redis://:${REDIS_PASSWORD:?}@redis:6379
      S3_ACCESS_KEY_ID: ${MINIO_ROOT_USER:?}
      S3_BUCKET: ${MINIO_BUCKET:?}
      S3_ENABLE_PATH_STYLE: ${S3_ENABLE_PATH_STYLE:-1}
      S3_ENDPOINT: http://minio:9000
      S3_PREVIEW_URL_EXPIRE_IN: ${S3_PREVIEW_URL_EXPIRE_IN:-900}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:?}
      SEARCH_REINDEX_ON_BOOT: ${SEARCH_REINDEX_ON_BOOT:-false}
    image: ${APP_IMAGE:-ghcr.io/your-org/your-repo/app}:${APP_TAG:-latest}
    networks:
    - private
    read_only: true
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    tmpfs:
    - /tmp
volumes:
  caddy_config: null
  caddy_data: null
  ex0-data: null
  ex0-meili-data: null
  ex0-minio-data: null
  ex0-redis-data: null
x-app-image: ${APP_IMAGE:-ghcr.io/your-org/your-repo/app}:${APP_TAG:-latest}
